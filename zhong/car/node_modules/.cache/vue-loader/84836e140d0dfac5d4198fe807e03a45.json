{"remainingRequest":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myCompany\\zhongdianqiche\\111\\src\\views\\media\\details\\Infor.vue?vue&type=template&id=192dc042&scoped=true&","dependencies":[{"path":"D:\\myCompany\\zhongdianqiche\\111\\src\\views\\media\\details\\Infor.vue","mtime":1597111210717},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}