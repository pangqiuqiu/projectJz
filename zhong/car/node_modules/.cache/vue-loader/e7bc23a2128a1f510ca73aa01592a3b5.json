{"remainingRequest":"H:\\jz\\前端\\w\\zhong\\car\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!H:\\jz\\前端\\w\\zhong\\car\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\前端\\w\\zhong\\car\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\前端\\w\\zhong\\car\\src\\views\\media\\details\\Infor.vue?vue&type=template&id=192dc042&scoped=true&","dependencies":[{"path":"H:\\jz\\前端\\w\\zhong\\car\\src\\views\\media\\details\\Infor.vue","mtime":1597111296081},{"path":"H:\\jz\\前端\\w\\zhong\\car\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\前端\\w\\zhong\\car\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"H:\\jz\\前端\\w\\zhong\\car\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\前端\\w\\zhong\\car\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}