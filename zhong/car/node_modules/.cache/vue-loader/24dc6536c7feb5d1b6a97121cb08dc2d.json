{"remainingRequest":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myCompany\\zhongdianqiche\\111\\src\\views\\distributor\\Offer.vue?vue&type=template&id=9bcae52c&scoped=true&","dependencies":[{"path":"D:\\myCompany\\zhongdianqiche\\111\\src\\views\\distributor\\Offer.vue","mtime":1595842137654},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\zhongdianqiche\\111\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}