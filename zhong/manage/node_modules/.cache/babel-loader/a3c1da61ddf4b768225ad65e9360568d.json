{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js!H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\jurisdiction\\Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\jurisdiction\\Admin.vue","mtime":1615260495573},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJIOlxcanpcXHdcXHpob25nXFxtYW5hZ2VcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOaJi+acuuWPtwogICAgICBwaG9uZTogJycsCiAgICAgIC8vIOWRmOW3peS/oeaBrwogICAgICBvYmo6IHt9LAogICAgICAvLyDmnYPpmZDliJfooagKICAgICAgYWRtaW46IFtdLAogICAgICAvLyDlj5HpgIHlkI7lj7DnmoRJROaVsOaNrgogICAgICBhZG1pbkxpc3Q6IFtdLAogICAgICAvLyDmj5DkuqTmjInpkq4KICAgICAgaXNTaG93OiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOafpeaJvgogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfcmVmLCByZXMsIF9yZWYyLCByZXcsIGksIGNvdW50LCBpdGVtLCBqOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoL14xWzM0NTY3ODldXGR7OX0kLy50ZXN0KF90aGlzLnBob25lKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aJi+acuuWPt+eggeacieivr++8jOivt+mHjeaWsOWhq+WGmScpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAucG9zdCgnL3VzZXIvZ2V0VXNlckJ5UGhvbmUnLCB7CiAgICAgICAgICAgICAgICAgIHBob25lOiBfdGhpcy5waG9uZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9yZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3JlZi5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMub2JqID0gcmVzOyAvLyDojrflj5bmnYPpmZDliJfooagKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5wb3N0KCcvdXNlci9TaG93UXgnLCB7CiAgICAgICAgICAgICAgICAgIHBob25lOiBfdGhpcy5waG9uZSwKICAgICAgICAgICAgICAgICAgdXNlcklkOiBfdGhpcy5vYmouaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfcmVmMiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXcgPSBfcmVmMi5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMuYWRtaW4gPSByZXc7IC8vIGNvbnNvbGUubG9nKHJldykKICAgICAgICAgICAgICAgIC8vIOaYvuekuuaPkOS6pOaMiemSrgoKICAgICAgICAgICAgICAgIF90aGlzLmlzU2hvdyA9IHRydWU7IC8vIOiOt+WPluaVsOe7hOS4reW3suacieadg+mZkAogICAgICAgICAgICAgICAgLy/mr4/kuKrmoI/nm67lop7liqDlhajpgIkgMjAyMS0zLTkgenkKCiAgICAgICAgICAgICAgICBfdGhpcy5hZG1pbi5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgaXRlbS5jaGVja2VkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgaXRlbS5ja05hbWUgPSAi5YWo6YCJIjsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgX3RoaXMuYWRtaW4ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgY291bnQgPSAwOwogICAgICAgICAgICAgICAgICBpdGVtID0gX3RoaXMuYWRtaW5baV0ubGlzdDsKCiAgICAgICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBpdGVtLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW1bal0uaXMgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvdW50Kys7CgogICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWRtaW5MaXN0LnNwbGljZSgxLCAwLCBpdGVtW2pdLmlkKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmxlbmd0aCA9PT0gY291bnQpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5hZG1pbltpXS5jaGVja2VkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5hZG1pbltpXS5jaGVja2VkID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gLy8gY29uc29sZS5sb2codGhpcy5hZG1pbkxpc3QpCgoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOaUueWPmOWkjemAieahhgogICAgY2hhbmdlOiBmdW5jdGlvbiBjaGFuZ2UoaW5kZXgsIHosIGl0ZW0pIHsKICAgICAgdmFyIGNvdW50ID0gaXRlbS5saXN0Lmxlbmd0aDsKCiAgICAgIGlmICh6ID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5hZG1pbkxpc3Quc3BsaWNlKDEsIDAsIGluZGV4KTsKCiAgICAgICAgaWYgKGl0ZW0ubGlzdC5maWx0ZXIoZnVuY3Rpb24gKHN1Ykl0ZW0pIHsKICAgICAgICAgIHJldHVybiBzdWJJdGVtLmlzID09IHRydWU7CiAgICAgICAgfSkubGVuZ3RoID09IGNvdW50KSB7CiAgICAgICAgICBpdGVtLmNoZWNrZWQgPSB0cnVlOwogICAgICAgIH0gLy8gY29uc29sZS5sb2codGhpcy5hZG1pbkxpc3QpCgogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYWRtaW5MaXN0ID0gdGhpcy5hZG1pbkxpc3QuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBpbmRleDsKICAgICAgICB9KTsKICAgICAgICBpdGVtLmNoZWNrZWQgPSBmYWxzZTsgLy8gY29uc29sZS5sb2codGhpcy5hZG1pbkxpc3QpCiAgICAgIH0KICAgIH0sCiAgICBhbGxDaGFuZ2U6IGZ1bmN0aW9uIGFsbENoYW5nZShsaXN0LCB6KSB7CiAgICAgIHZhciBpZHMgPSBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkOwogICAgICB9KTsKCiAgICAgIGlmICh6ID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5hZG1pbkxpc3QgPSB0aGlzLmFkbWluTGlzdC5maWx0ZXIoZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICByZXR1cm4gaWRzLmluZGV4T2YodmFsdWUpID09IC0xOwogICAgICAgIH0pLmNvbmNhdChpZHMpOwogICAgICAgIGxpc3QubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBpdGVtLmlzID0gdHJ1ZTsKICAgICAgICAgIHJldHVybiBpdGVtOwogICAgICAgIH0pOyAvL2NvbnNvbGUubG9nKHRoaXMuYWRtaW5MaXN0KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYWRtaW5MaXN0ID0gdGhpcy5hZG1pbkxpc3QuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIGlkcy5pbmRleE9mKHZhbHVlKSA9PSAtMTsKICAgICAgICB9KTsKICAgICAgICBsaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaXRlbS5pcyA9IGZhbHNlOwogICAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgICAgfSk7IC8vY29uc29sZS5sb2codGhpcy5hZG1pbkxpc3QpCiAgICAgIH0KICAgIH0sCiAgICAvLyDmj5DkuqQKICAgIHN1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kaHR0cC5wb3N0KCcvdXNlci9zcScsIHsKICAgICAgICAgICAgICAgICAgbGlzdDogX3RoaXMyLmFkbWluTGlzdCwKICAgICAgICAgICAgICAgICAgdXNlcklkOiBfdGhpczIub2JqLmlkLAogICAgICAgICAgICAgICAgICB0b2tlbjogd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzICE9PSAyMDAgfHwgcmVzLmRhdGEgIT09IHRydWUpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF90aGlzMi4kbWVzc2FnZS5lcnJvcign6K6+572u5aSx6LSlJykpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygn5o6I5p2D5oiQ5YqfJyk7CgogICAgICAgICAgICAgICAgX3RoaXMyLnN1Ym1pdCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},null]}