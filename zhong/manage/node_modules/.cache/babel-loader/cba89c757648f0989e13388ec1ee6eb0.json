{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js!H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\pic\\Lb.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\pic\\Lb.vue","mtime":1590141136547},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiSDpcXGp6XFx3XFx6aG9uZ1xcbWFuYWdlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDooajmoLwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgLy8g5a6a5pe25ZmoCiAgICAgIHRpbWVyOiBudWxsLAogICAgICBuOiAzLAogICAgICAvLyDlr7nor53moYYKICAgICAgZGlhbG9nVGFibGVWaXNpYmxlOiBmYWxzZSwKICAgICAgb3B0aW9uczogW10sCiAgICAgIHNlcmllczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bpppbpobXova7mkq3lm74KICAgIGdldFN3aXBlcjogZnVuY3Rpb24gZ2V0U3dpcGVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3JlZiwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5wb3N0KCcvcGljL2dldEhvbWUnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3JlZiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfcmVmLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy50YWJsZURhdGEgPSByZXM7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDliKDpmaTooajmoLzova7mkq3lm74KICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGh0dHAucG9zdCgnL3BpYy94bGInLCB7CiAgICAgICAgICAgICAgICAgIHNlcmllczogcm93LnNlcmllcwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5kYXRhICE9PSB0cnVlIHx8IHJlcy5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF90aGlzMi4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTmiJDlip8nKTsKCiAgICAgICAgICAgICAgICBfdGhpczIudGltZXIgPSBzZXRJbnRlcnZhbChfdGhpczIuZ2V0Um91dGVyLCAxMDAwKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5Yi35paw6aG16Z2iCiAgICBnZXRSb3V0ZXI6IGZ1bmN0aW9uIGdldFJvdXRlcigpIHsKICAgICAgdGhpcy5uLS07CgogICAgICBpZiAodGhpcy5uID09PSAwKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oMCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDmlrDlop7ova7mkq3lm74KICAgIGFkZFN3aXBlcjogZnVuY3Rpb24gYWRkU3dpcGVyKCkgewogICAgICB0aGlzLmRpYWxvZ1RhYmxlVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuZ2V0U2VyaWVzKCk7CiAgICB9LAogICAgLy8g6I635Y+W5ZOB54mM6L2m57O7CiAgICBnZXRTZXJpZXM6IGZ1bmN0aW9uIGdldFNlcmllcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgX3JlZjIsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGh0dHAucG9zdCgnL3BpYy9icmFuZFNlcmllcycpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfcmVmMiA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3JlZjIuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMy5vcHRpb25zID0gcmVzOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDmj5DkuqQKICAgIHVwQWRkOiBmdW5jdGlvbiB1cEFkZCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zZXJpZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+mAieaLqeWTgeeJjOi9puezuycpOwogICAgICB9CgogICAgICBpZiAodGhpcy4kcmVmcy5uZXdfaW1hZ2UuZmlsZXNbMF0gPT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fkuIrkvKDnhafniYcnKTsKICAgICAgfQoKICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnaW1hZ2VfZGF0YScsIHRoaXMuJHJlZnMubmV3X2ltYWdlLmZpbGVzWzBdKTsKICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvdXBsb2FkL3VwbG9hZDUnLCBmb3JtRGF0YSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuc3RhdHVzICE9PSAyMDApIHsKICAgICAgICAgIHJldHVybiBfdGhpczQuJG1lc3NhZ2UuZXJyb3IoJ+WbvueJh+S4iuS8oOWksei0pScpOwogICAgICAgIH0KCiAgICAgICAgX3RoaXM0LiRodHRwLnBvc3QoJy9waWMvc2xiJywgewogICAgICAgICAgc2VyaWVzOiBfdGhpczQuc2VyaWVzWzFdLAogICAgICAgICAgaG9tZVBpYzogcmVzLmRhdGEKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXEpIHsKICAgICAgICAgIGlmIChyZXEuc3RhdHVzICE9PSAyMDAgfHwgcmVxLmRhdGEgIT09IHRydWUpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzNC4kbWVzc2FnZS5lcnJvcign5o+Q5Lqk5aSx6LSlJyk7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXM0LmRpYWxvZ1RhYmxlVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzNC4kbWVzc2FnZS5zdWNjZXNzKCfkuIrkvKDmiJDlip8nKTsKCiAgICAgICAgICBfdGhpczQudGltZXIgPSBzZXRJbnRlcnZhbChfdGhpczQuZ2V0Um91dGVyLCAxMDAwKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVxKSB7fSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHt9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvLyDojrflj5bpppbpobXova7mkq3lm74KICAgIHRoaXMuZ2V0U3dpcGVyKCk7CiAgfQp9Ow=="},null]}