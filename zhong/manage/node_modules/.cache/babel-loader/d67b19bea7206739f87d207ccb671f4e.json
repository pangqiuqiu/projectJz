{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js!H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\distributor\\BrandList.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\distributor\\BrandList.vue","mtime":1618567274314},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiSDpcXGp6XFx3XFx6aG9uZ1xcbWFuYWdlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmbGFnOiB0cnVlLAogICAgICAvLyDlr7nor53moYYKICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBtc2c6ICcnLAogICAgICBmb3JtTGFiZWxXaWR0aDogJzE1MHB4JywKICAgICAgZm9ybTogewogICAgICAgIGlkOiAnJywKICAgICAgICBicmFuZDogJycsCiAgICAgICAgc2VyaWVzOiBbXSAvLyDns7vliJcKCiAgICAgIH0sCiAgICAgIC8vIOaQnOe0ouadoeS7tgogICAgICBmb3JtSW5saW5lOiB7CiAgICAgICAgaWQ6ICcnLAogICAgICAgIGJyYW5kOiAnJywKICAgICAgICBwYWdlTm86IDEsCiAgICAgICAgcGFnZVNpemU6IDIwCiAgICAgIH0sCiAgICAgIC8vIOaAu+aVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g5ZOB54mMCiAgICAgIGJyYW5kQXJ5OiBbXSwKICAgICAgLy8g57O75YiXCiAgICAgIHNlcmllczogW10sCiAgICAgIC8vIOihqOagvAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICAvLyDlm77niYfmlbDnu4QKICAgICAgcGljOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPlue7j+mUgOWVhuWIl+ihqAogICAgZ2V0U3BlY2lhbFNhbGU6IGZ1bmN0aW9uIGdldFNwZWNpYWxTYWxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3JlZiwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5wb3N0KCcvZGVhbGVyL2dldERlYWxlckFsbEJyYW5kJywgX3RoaXMuZm9ybUlubGluZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF9yZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3JlZi5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMudGFibGVEYXRhID0gcmVzLmw7CiAgICAgICAgICAgICAgICBfdGhpcy50b3RhbCA9IF90aGlzLnRhYmxlRGF0YS5sZW5ndGg7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDov5Tlm57kuIrkuIDpobXpnaIKICAgIGJhY2s6IGZ1bmN0aW9uIGJhY2soKSB7CiAgICAgIHRoaXMuJHJvdXRlci5nbygtMSk7CiAgICB9LAogICAgLy8g5pS55Y+Y5aSN6YCJ5qGGCiAgICBjaGFuZ2U6IGZ1bmN0aW9uIGNoYW5nZShuYW1lLCB6KSB7CiAgICAgIGlmICh6ID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5mb3JtLnNlcmllcy5zcGxpY2UoMSwgMCwgbmFtZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5mb3JtLnNlcmllcyA9IHRoaXMuZm9ybS5zZXJpZXMuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBuYW1lOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy8g6I635Y+W5ZOB54mMCiAgICAvLyBhc3luYyBkcm9wRG93bkJyYW5kIChjYWxsYmFjaykgewogICAgLy8gICBpZiAoY2FsbGJhY2sgPT09IHRydWUpIHsKICAgIC8vICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCcvZGVhbGVyL2dldERlYWxlckFsbEJyYW5kJywgewogICAgLy8gICAgICAgICBkZWFsZXJJZDogdGhpcy5mb3JtSW5saW5lLmRlYWxlcklkCiAgICAvLyAgICAgfSkKICAgIC8vICAgICB0aGlzLmJyYW5kQXJ5ID0gcmVzCiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICAvLyAvLyDmn6Xor6IKICAgIC8vIGdnZyAoaW5kZXgpIHsKICAgIC8vICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQpIHsKICAgIC8vICAgICB0aGlzLmZvcm1JbmxpbmUucGFnZU5vID0gMQogICAgLy8gICB9CiAgICAvLyB9LAogICAgLy8gc3VibWl0ICgpIHsKICAgIC8vICAgaWYgKHRoaXMuZmxhZyA9PT0gZmFsc2UpIHsKICAgIC8vICAgICB0aGlzLmZvcm1JbmxpbmUucGFnZU5vID0gMQogICAgLy8gICB9CiAgICAvLyAgIHRoaXMuZ2dnKCkKICAgIC8vICAgdGhpcy5nZXRTcGVjaWFsU2FsZSgpCiAgICAvLyAgIHRoaXMuZmxhZyA9IHRydWUKICAgIC8vIH0sCiAgICAvLyDnvJbovpEKICAgIGhhbmRsZUVkaXQ6IGZ1bmN0aW9uIGhhbmRsZUVkaXQocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIF9yZWYyLCByZXMsIGksIGl0ZW07CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRodHRwLnBvc3QoJy9kZWFsZXIvZ2V0RGVhbGVyQWxsU2VyaWVzJywgewogICAgICAgICAgICAgICAgICBicmFuZDogcm93LmJyYW5kLAogICAgICAgICAgICAgICAgICBpZDogX3RoaXMyLmZvcm1JbmxpbmUuaWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfcmVmMiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3JlZjIuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5zZXJpZXMgPSByZXM7CiAgICAgICAgICAgICAgICBfdGhpczIuZm9ybS5icmFuZCA9IHJvdy5icmFuZDsKICAgICAgICAgICAgICAgIF90aGlzMi5mb3JtLnNlcmllcyA9IFtdOwoKICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBfdGhpczIuc2VyaWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgIGl0ZW0gPSBfdGhpczIuc2VyaWVzW2ldOwoKICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uY2hvaWNlSXMgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczIuZm9ybS5zZXJpZXMuc3BsaWNlKDEsIDAsIGl0ZW0uc2VyaWVzKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSAvL3RoaXMuZm9ybS5icmFuZCA9IHRoaXMuZm9ybS5icmFuZC50b1N0cmluZygpLnNwbGl0KCcsJykKCgogICAgICAgICAgICAgICAgX3RoaXMyLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g56Gu5a6a5o+Q5LqkCiAgICBkaWFsb2dDaGVjazogZnVuY3Rpb24gZGlhbG9nQ2hlY2soKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvZGVhbGVyL3VwZGF0ZUJyYW5kJywgdGhpcy5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZXcpIHsKICAgICAgICBpZiAocmV3LnN0YXR1cyAhPT0gMjAwIHx8IHJldy5kYXRhICE9PSB0cnVlKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn5L+u5pS55oiQ5YqfJyk7CgogICAgICAgIF90aGlzMy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDliIfmjaLpobXmlbAKICAgIGNoYW5nZVBhZ2U6IGZ1bmN0aW9uIGNoYW5nZVBhZ2UoaW5kZXgpIHsKICAgICAgdGhpcy5mb3JtSW5saW5lLnBhZ2VObyA9IGluZGV4OwogICAgICB0aGlzLnN1Ym1pdCgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZvcm1JbmxpbmUuaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZDsKICAgIHRoaXMuZm9ybS5pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkOyAvLyDojrflj5bnibnljZbliJfooagKCiAgICB0aGlzLmdldFNwZWNpYWxTYWxlKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30KfTs="},null]}