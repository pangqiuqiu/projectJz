{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js!H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\distributor\\BrandList.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\distributor\\BrandList.vue","mtime":1620267526240},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiSDpcXGp6XFx3XFx6aG9uZ1xcbWFuYWdlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmbGFnOiB0cnVlLAogICAgICAvLyDlr7nor53moYYKICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBtc2c6ICcnLAogICAgICBmb3JtTGFiZWxXaWR0aDogJzE1MHB4JywKICAgICAgZm9ybTogewogICAgICAgIGlkOiAnJywKICAgICAgICBicmFuZDogJycsCiAgICAgICAgc2VyaWVzOiBbXSAvLyDns7vliJcKCiAgICAgIH0sCiAgICAgIC8vIOaQnOe0ouadoeS7tgogICAgICBmb3JtSW5saW5lOiB7CiAgICAgICAgaWQ6ICcnLAogICAgICAgIGJyYW5kOiAnJywKICAgICAgICBwYWdlTm86IDEsCiAgICAgICAgcGFnZVNpemU6IDIwCiAgICAgIH0sCiAgICAgIC8vIOaAu+aVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g5ZOB54mMCiAgICAgIGJyYW5kQXJ5OiBbXSwKICAgICAgLy8g57O75YiXCiAgICAgIHNlcmllczogW10sCiAgICAgIC8vIOihqOagvAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICAvLyDlm77niYfmlbDnu4QKICAgICAgcGljOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPlue7j+mUgOWVhuWIl+ihqAogICAgZ2V0U3BlY2lhbFNhbGU6IGZ1bmN0aW9uIGdldFNwZWNpYWxTYWxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3JlZiwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5wb3N0KCcvZGVhbGVyL2dldERlYWxlckFsbEJyYW5kJywgX3RoaXMuZm9ybUlubGluZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF9yZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3JlZi5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMudGFibGVEYXRhID0gcmVzOwogICAgICAgICAgICAgICAgX3RoaXMudG90YWwgPSBfdGhpcy50YWJsZURhdGEubGVuZ3RoOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g6L+U5Zue5LiK5LiA6aG16Z2iCiAgICBiYWNrOiBmdW5jdGlvbiBiYWNrKCkgewogICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpOwogICAgfSwKICAgIC8vIOaUueWPmOWkjemAieahhgogICAgY2hhbmdlOiBmdW5jdGlvbiBjaGFuZ2UobmFtZSwgeikgewogICAgICBpZiAoeiA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMuZm9ybS5zZXJpZXMuc3BsaWNlKDEsIDAsIG5hbWUpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZm9ybS5zZXJpZXMgPSB0aGlzLmZvcm0uc2VyaWVzLmZpbHRlcihmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gbmFtZTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIC8vIOiOt+WPluWTgeeJjAogICAgLy8gYXN5bmMgZHJvcERvd25CcmFuZCAoY2FsbGJhY2spIHsKICAgIC8vICAgaWYgKGNhbGxiYWNrID09PSB0cnVlKSB7CiAgICAvLyAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgnL2RlYWxlci9nZXREZWFsZXJBbGxCcmFuZCcsIHsKICAgIC8vICAgICAgICAgZGVhbGVySWQ6IHRoaXMuZm9ybUlubGluZS5kZWFsZXJJZAogICAgLy8gICAgIH0pCiAgICAvLyAgICAgdGhpcy5icmFuZEFyeSA9IHJlcwogICAgLy8gICB9CiAgICAvLyB9LAogICAgLy8gLy8g5p+l6K+iCiAgICAvLyBnZ2cgKGluZGV4KSB7CiAgICAvLyAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7CiAgICAvLyAgICAgdGhpcy5mb3JtSW5saW5lLnBhZ2VObyA9IDEKICAgIC8vICAgfQogICAgLy8gfSwKICAgIC8vIHN1Ym1pdCAoKSB7CiAgICAvLyAgIGlmICh0aGlzLmZsYWcgPT09IGZhbHNlKSB7CiAgICAvLyAgICAgdGhpcy5mb3JtSW5saW5lLnBhZ2VObyA9IDEKICAgIC8vICAgfQogICAgLy8gICB0aGlzLmdnZygpCiAgICAvLyAgIHRoaXMuZ2V0U3BlY2lhbFNhbGUoKQogICAgLy8gICB0aGlzLmZsYWcgPSB0cnVlCiAgICAvLyB9LAogICAgLy8g57yW6L6RCiAgICBoYW5kbGVFZGl0OiBmdW5jdGlvbiBoYW5kbGVFZGl0KHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBfcmVmMiwgcmVzLCBpLCBpdGVtOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kaHR0cC5wb3N0KCcvZGVhbGVyL2dldERlYWxlckFsbFNlcmllcycsIHsKICAgICAgICAgICAgICAgICAgYnJhbmQ6IHJvdy5icmFuZCwKICAgICAgICAgICAgICAgICAgaWQ6IF90aGlzMi5mb3JtSW5saW5lLmlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3JlZjIgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF9yZWYyLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpczIuc2VyaWVzID0gcmVzOwogICAgICAgICAgICAgICAgX3RoaXMyLmZvcm0uYnJhbmQgPSByb3cuYnJhbmQ7CiAgICAgICAgICAgICAgICBfdGhpczIuZm9ybS5zZXJpZXMgPSBbXTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgX3RoaXMyLnNlcmllcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBpdGVtID0gX3RoaXMyLnNlcmllc1tpXTsKCiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmNob2ljZUlzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmZvcm0uc2VyaWVzLnNwbGljZSgxLCAwLCBpdGVtLnNlcmllcyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gLy90aGlzLmZvcm0uYnJhbmQgPSB0aGlzLmZvcm0uYnJhbmQudG9TdHJpbmcoKS5zcGxpdCgnLCcpCgoKICAgICAgICAgICAgICAgIF90aGlzMi5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWU7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOehruWumuaPkOS6pAogICAgZGlhbG9nQ2hlY2s6IGZ1bmN0aW9uIGRpYWxvZ0NoZWNrKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAucG9zdCgnL2RlYWxlci91cGRhdGVCcmFuZCcsIHRoaXMuZm9ybSkudGhlbihmdW5jdGlvbiAocmV3KSB7CiAgICAgICAgaWYgKHJldy5zdGF0dXMgIT09IDIwMCB8fCByZXcuZGF0YSAhPT0gdHJ1ZSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+S/ruaUueaIkOWKnycpOwoKICAgICAgICBfdGhpczMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5YiH5o2i6aG15pWwCiAgICBjaGFuZ2VQYWdlOiBmdW5jdGlvbiBjaGFuZ2VQYWdlKGluZGV4KSB7CiAgICAgIHRoaXMuZm9ybUlubGluZS5wYWdlTm8gPSBpbmRleDsKICAgICAgdGhpcy5zdWJtaXQoKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7fSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mb3JtSW5saW5lLmlkID0gdGhpcy4kcm91dGUucXVlcnkuaWQ7CiAgICB0aGlzLmZvcm0uaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZDsgLy8g6I635Y+W54m55Y2W5YiX6KGoCgogICAgdGhpcy5nZXRTcGVjaWFsU2FsZSgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9Cn07"},null]}