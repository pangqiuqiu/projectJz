{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\information\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\information\\Edit.vue","mtime":1591751983505},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 头部标题 -->\r\n    <div class=\"HeadTitle\">\r\n      <h3>{{this.title}}</h3>\r\n      <el-button type=\"text\" @click=\"back\">《《 返回</el-button>\r\n    </div>\r\n    <!-- 新增资讯表单 -->\r\n    <el-form label-position=\"right\" label-width=\"80px\" :model=\"form\" :rules=\"rules\" ref=\"rulesForm\">\r\n      <el-form-item label=\"品牌\">\r\n        <el-select v-model=\"form.brand\" placeholder=\"请选择\" @change=\"changeBrand\">\r\n          <el-option\r\n            v-for=\"item in brandList\"\r\n            :key=\"item\"\r\n            :label=\"item\"\r\n            :value=\"item\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"车系\">\r\n        <el-select v-model=\"form.series\" placeholder=\"请选择\" @visible-change=\"getSeries($event)\">\r\n          <el-option\r\n            v-for=\"item in seriesList\"\r\n            :key=\"item\"\r\n            :label=\"item\"\r\n            :value=\"item\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"省份\">\r\n        <el-select filterable v-model=\"form.province\" placeholder=\"请选择\" @change=\"changeProvince\">\r\n          <el-option\r\n            v-for=\"item in provinceList\"\r\n            :key=\"item.id\"\r\n            :label=\"item.province\"\r\n            :value=\"item.provinceid\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"城市\">\r\n        <el-select filterable v-model=\"form.area\" placeholder=\"请选择\" @visible-change=\"getCity($event)\">\r\n          <el-option\r\n            v-for=\"item in cityList\"\r\n            :key=\"item.id\"\r\n            :label=\"item.city\"\r\n            :value=\"item.cityid\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"标题\" prop=\"title\">\r\n        <el-input v-model=\"form.title\" placeholder=\"请输入标题，不超过10个字符\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"摘要\" prop=\"abstract\">\r\n        <el-input style=\"margin-bottom: 10px;\" placeholder=\"不超过120字\" type=\"textarea\" :rows=\"2\" v-model=\"form.abstract\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"作者\" prop=\"author\">\r\n        <el-input v-model=\"form.author\" placeholder=\"请输入作者名称\"></el-input>\r\n      </el-form-item>\r\n      <!-- 上传封面图 -->\r\n      <el-form-item label=\"封面图\">\r\n        <input type=\"file\" id=\"saveImage\" name=\"myphoto\" accept=\"image/png,image/gif,image/jpeg\" ref=\"new_image\">\r\n        <div style=\"font-size: 12px;color: #999;\">(如需更改封面图请重新上传，否则可直接跳过)尺寸为800x400; 图片格式为png/gif/jpeg, 大小不大于2M</div>\r\n      </el-form-item>\r\n      <img :src=\"this.pic\" alt=\"\">\r\n      <!-- 富文本 -->\r\n      <div class=\"edit_container\">\r\n        <div ref=\"editorMenu\" style=\"width: 1000px;border:1px solid #ccc;\"></div>\r\n        <div ref=\"editorElem\" style=\"text-align: left; width: 1000px; height: 500px; border:1px solid #ccc;\"></div>\r\n      </div>\r\n      <el-form-item>\r\n        <el-button style=\"width: 400px;\" type=\"primary\" @click=\"submit()\">提交</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from 'wangeditor'\r\nexport default {\r\n  data () {\r\n    return {\r\n      // 资讯标题\r\n      title: '',\r\n      // 品牌车系\r\n      brandList: [],\r\n      seriesList: [],\r\n      // 省份城市\r\n      provinceList: [],\r\n      cityList: [],\r\n      // 表单数据\r\n      editor: null,\r\n      form: {\r\n        title: '', // 标题\r\n        abstract: '', // 摘要\r\n        author: '', // 作者\r\n        brand: '', //品牌\r\n        series: '', // 车系\r\n        province: '', // 省份\r\n        area: '', // 城市\r\n        editorContent: '' // 正文\r\n      },\r\n      // 图片\r\n      pic: '',\r\n      // 表单验证\r\n      rules: {\r\n        title: [\r\n          { required: true, message: '请输入标题', trigger: 'blur' },\r\n          { min: 1, max: 10, message: '长度在 1 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        abstract: [\r\n          { required: true, message: '请输入摘要', trigger: 'blur' },\r\n          { min: 1, max: 120, message: '不超过120字', trigger: 'blur' }\r\n        ],\r\n        author: [\r\n          { required: true, message: '请输入作者', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取资讯\r\n    async getInformationType () {\r\n      const id = this.$route.query.id\r\n      const { data: res } = await this.$http.post('/Infor/getOneInfor', {\r\n        id: id\r\n      })\r\n      this.pic = res.coverPic\r\n      this.title = res.type\r\n      this.form.title = res.title\r\n      this.form.abstract = res.intro\r\n      this.form.author = res.username\r\n      this.form.brand = res.brand\r\n      this.form.series = res.series,\r\n      this.form.province = res.province\r\n      this.form.area = res.area\r\n      this.form.editorContent = this.editor.txt.html(res.text)\r\n    },\r\n    // 获取品牌\r\n    async getBrand () {\r\n      const { data: res } = await this.$http.post('/car/showAllBrand')\r\n      this.brandList = res\r\n    },\r\n    changeBrand () {\r\n      this.form.series = ''\r\n    },\r\n    // 获取车系\r\n    async getSeries (callback) {\r\n      if (callback === true) {\r\n        const { data: res } = await this.$http.post('/car/showSeries', {\r\n          brand: this.form.brand\r\n        })\r\n        this.seriesList = res\r\n      }\r\n    },\r\n    // 省份\r\n    async getProvince () {\r\n      const { data: res } = await this.$http.post('/area/getProvince')\r\n      this.provinceList = res\r\n    },\r\n    changeProvince () {\r\n      this.form.area = ''\r\n    },\r\n    async getCity (callback) {\r\n      if (callback === true) {\r\n        const { data: res } = await this.$http.post('/area/getCityByPid', {\r\n          provinceId: this.form.province\r\n        })\r\n        this.cityList = res\r\n      }\r\n    },\r\n    // 返回上一页面\r\n    back () {\r\n      this.$router.go(-1)\r\n    },\r\n    // 提交表单\r\n    submit () {\r\n      this.$refs.rulesForm.validate((valid) => {\r\n        if (!valid) {\r\n          this.$message({\r\n            showClose: true,\r\n            message: '请完善表单内容',\r\n            type: 'warning'\r\n          })\r\n        } else {\r\n          const formData = new FormData()\r\n          if (this.$refs.new_image.files[0] === undefined) {\r\n            const id = this.$route.query.id\r\n            const rew = this.$http.post('/Infor/updateInfor', {\r\n              id: id,\r\n              token: window.sessionStorage.getItem('token'),\r\n              title: this.form.title,\r\n              type: this.title,\r\n              username: this.form.author,\r\n              text: this.form.editorContent,\r\n              intro: this.form.abstract,\r\n              brand: this.form.brand,\r\n              series: this.form.series,\r\n              province: this.form.province,\r\n              area: this.form.area\r\n            }).then(rew => {\r\n              if (rew.data === true) {\r\n                this.$message.success('编辑成功')\r\n              } else {\r\n                this.$message.error('提交失败')\r\n              }\r\n            })\r\n          } else {\r\n            formData.append('image_data', this.$refs.new_image.files[0])\r\n            formData.append('coverPic', this.pic)\r\n            //单个文件进行上传\r\n            this.$http.post('/upload/upload5', formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            }).then(res => {\r\n              if (res.status !== 200) {\r\n                return alert('图片上传失败')\r\n              }\r\n              const id = this.$route.query.id\r\n              const rew = this.$http.post('/Infor/updateInfor', {\r\n                id: id,\r\n                token: window.sessionStorage.getItem('token'),\r\n                title: this.form.title,\r\n                type: this.title,\r\n                username: this.form.author,\r\n                text: this.form.editorContent,\r\n                intro: this.form.abstract,\r\n                coverPic: res.data,\r\n                brand: this.form.brand,\r\n                series: this.form.series,\r\n                province: this.form.province,\r\n                area: this.form.area\r\n              }).then(rew => {\r\n                if (rew.data === true) {\r\n                  this.$message.success('编辑成功')\r\n                } else {\r\n                  this.$message.error('提交失败')\r\n                }\r\n              })\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    // 获取资讯\r\n    this.getInformationType()\r\n    // 获取品牌\r\n    this.getBrand()\r\n    // 获取省份\r\n    this.getProvince()\r\n  },\r\n  mounted () {\r\n    this.editor = new E(this.$refs.editorMenu, this.$refs.editorElem)\r\n    // 上传本地base64格式图片\r\n    // this.editor.customConfig.uploadImgShowBase64 = true\r\n    // 编辑器的事件，每次改变会获取其html内容\r\n    this.editor.customConfig.onchange = html => {\r\n      this.form.editorContent = html\r\n      // this.catchData(this.editorContent) // 把这个html通过catchData的方法传入父组件\r\n    }\r\n    // 图片上传\r\n    this.editor.customConfig.uploadImgMaxSize = 2 * 1024 * 1024\r\n    this.editor.customConfig.uploadImgServer = 'https://zhongdianqiche.com:447/upload/upload3' // 图片上传地址\r\n    this.editor.customConfig.uploadFileName = \"image_data\" // 图片上传名称\r\n    this.editor.customConfig.debug = true\r\n    this.editor.customConfig.uploadImgHooks = {\r\n      customInsert: function (insertImg, result, editor) {\r\n        // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）\r\n        // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果\r\n        // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片\r\n        const url = result.url\r\n        url.forEach(item => {\r\n          insertImg(item)\r\n        })\r\n        // result 必须是一个 JSON 格式字符串！！！否则报错\r\n      }\r\n    }\r\n    this.editor.customConfig.menus = [\r\n      // 菜单配置\r\n      'head', // 标题\r\n      'bold', // 粗体\r\n      'fontSize', // 字号\r\n      'fontName', // 字体\r\n      'italic', // 斜体\r\n      'underline', // 下划线\r\n      'strikeThrough', // 删除线\r\n      'foreColor', // 文字颜色\r\n      'backColor', // 背景颜色\r\n      'link', // 插入链接\r\n      // 'list', // 列表\r\n      'justify', // 对齐方式\r\n      'quote', // 引用\r\n      // 'emoticon', // 表情\r\n      'image', // 插入图片\r\n      'table', // 表格\r\n      'code', // 插入代码\r\n      'undo', // 撤销\r\n      'redo' // 重复\r\n    ]\r\n    this.editor.customConfig.linkCheck = function (text, link) {\r\n    if (link !== \"\") {\r\n      const reg = /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/\r\n        if (!reg.test(link)) {\r\n          return '请输入正确的网址(例如 http://baidu.com)'\r\n        } else{\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    this.editor.create() // 创建富文本实例\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 头部标题\r\n.HeadTitle {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #f7f8f9;\r\n  padding-left: 30px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n}\r\n// 新增表单\r\n.el-form {\r\n  margin-top: 30px;\r\n  .el-form-item {\r\n    margin-bottom: 15px;\r\n  }\r\n  .el-select {\r\n    margin-bottom: 10px;\r\n    width: 400px;\r\n  }\r\n  .el-input {\r\n    margin-bottom: 10px;\r\n    width: 400px;\r\n  }\r\n  .el-button {\r\n    margin-top: 50px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/information"}]}