{"remainingRequest":"D:\\myCompany\\project\\aaa\\new\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myCompany\\project\\aaa\\new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myCompany\\project\\aaa\\new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myCompany\\project\\aaa\\new\\src\\views\\car\\Add.vue?vue&type=template&id=f323a0c8&scoped=true&","dependencies":[{"path":"D:\\myCompany\\project\\aaa\\new\\src\\views\\car\\Add.vue","mtime":1586857203342},{"path":"D:\\myCompany\\project\\aaa\\new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\project\\aaa\\new\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\myCompany\\project\\aaa\\new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myCompany\\project\\aaa\\new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}