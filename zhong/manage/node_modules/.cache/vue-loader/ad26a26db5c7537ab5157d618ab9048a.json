{"remainingRequest":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\jz\\w\\zhong\\manage\\src\\views\\specialSale\\Consultation.vue?vue&type=template&id=289049d2&scoped=true&","dependencies":[{"path":"H:\\jz\\w\\zhong\\manage\\src\\views\\specialSale\\Consultation.vue","mtime":1594720288073},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\jz\\w\\zhong\\manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}