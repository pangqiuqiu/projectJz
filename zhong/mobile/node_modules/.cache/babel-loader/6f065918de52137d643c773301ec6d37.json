{"ast":null,"code":"import \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nvar _jsxFileName = \"D:\\\\myCompany\\\\zhongdianqiche\\\\mobile\\\\src\\\\views\\\\Abc\\\\index.js\";\nimport React from 'react';\nexport default class Abc extends React.Component {\n  constructor(props) {\n    super();\n\n    this.onEndReached = () => {\n      const {\n        page,\n        row,\n        totalPage,\n        isLoading,\n        isHasMore\n      } = this.state; //当前已加载的条数小于total总条数 请求下一页数据，否则停止请求数据\n\n      if (Number(page) - 1 < Number(totalPage)) {\n        this.setState({\n          isLoading: true\n        });\n        this.getBatchData();\n      } else {\n        this.setState({\n          isLoading: false,\n          isHasMore: false\n        });\n      }\n    };\n\n    const ds = new _ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 !== r2\n    });\n    this.state = {\n      page: \"1\",\n      //页码\n      row: '10',\n      // 每页条数\n      totalPage: \"\",\n      //总页数\n      dataSource: ds,\n      //长列表加载数据源\n      billData: [],\n      //每页数据\n      preBillData: [],\n      //原始的订单列表\n      allBillData: [],\n      //原始的+每一页新的数据\n      isLoading: true,\n      //是否加载中\n      isHasMore: false //是否还有更多数据\n\n    };\n  }\n\n  componentDidMount() {} // 上拉加载更多\n\n\n  render() {\n    // 渲染每一行数据\n    const row = (rowData, sectionID, rowID) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, rowData.username), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, rowData.billNo), \"...\");\n    };\n\n    return /*#__PURE__*/React.createElement(_ListView, {\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderFooter: () => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 5,\n          textAlign: 'center',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, isHasMore && (isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"list_loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }\n      }, \"\\u52A0\\u8F7D\\u4E2D...\") : '已加载'), billData.length != 0 && !isHasMore && '没有更多内容'),\n      renderRow: row //每行数据渲染\n      ,\n      style: {\n        minHeight: 'calc(100vh - 20px)',\n        //高度需要定义\n        overflow: 'auto'\n      },\n      pageSize: 10 //一次渲染几条数据\n      ,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/myCompany/zhongdianqiche/mobile/src/views/Abc/index.js"],"names":["React","Abc","Component","constructor","props","onEndReached","page","row","totalPage","isLoading","isHasMore","state","Number","setState","getBatchData","ds","DataSource","rowHasChanged","r1","r2","dataSource","billData","preBillData","allBillData","componentDidMount","render","rowData","sectionID","rowID","username","billNo","el","lv","padding","textAlign","fontSize","length","minHeight","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ListView } from 'antd-mobile';\r\n\r\nexport default class Abc extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    const ds = new ListView.DataSource({\r\n      rowHasChanged: (r1, r2) => r1 !== r2\r\n    });\r\n    this.state={\r\n      page:\"1\", //页码\r\n      row:'10', // 每页条数\r\n      totalPage:\"\", //总页数\r\n      dataSource: ds, //长列表加载数据源\r\n      billData:[],  //每页数据\r\n      preBillData:[], //原始的订单列表\r\n      allBillData:[], //原始的+每一页新的数据\r\n      isLoading :true,  //是否加载中\r\n      isHasMore :false, //是否还有更多数据\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  // 上拉加载更多\r\n  onEndReached = () => {\r\n    const {page,row,totalPage,isLoading,isHasMore} =  this.state\r\n    //当前已加载的条数小于total总条数 请求下一页数据，否则停止请求数据\r\n    if((Number(page)-1) < Number(totalPage)){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        this.getBatchData()\r\n    }else{\r\n        this.setState({\r\n            isLoading:false,\r\n            isHasMore:false\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 渲染每一行数据\r\n    const row = (rowData, sectionID, rowID) => {\r\n      return(\r\n        <div>\r\n          <div>{rowData.username}</div>\r\n          <div>{rowData.billNo}</div>\r\n          ...\r\n        </div>\r\n      )\r\n    }　　\r\n    return (\r\n      <ListView\r\n       ref={el => this.lv = el}\r\n       dataSource={this.state.dataSource}\r\n       renderFooter={() => (<div style={{ padding:5, textAlign: 'center',fontSize:'14px' }}>\r\n           {\r\n            isHasMore && ( isLoading ? <span className='list_loading'>加载中...</span> : '已加载')\r\n           }\r\n           {\r\n            billData.length!=0 && (!isHasMore && '没有更多内容')\r\n           }\r\n       </div>)}\r\n       renderRow={row} //每行数据渲染\r\n       style={{\r\n         minHeight:'calc(100vh - 20px)', //高度需要定义\r\n         overflow: 'auto'\r\n       }}\r\n       pageSize={10}  //一次渲染几条数据\r\n       onEndReached={this.onEndReached}\r\n       onEndReachedThreshold={10}\r\n      />\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}