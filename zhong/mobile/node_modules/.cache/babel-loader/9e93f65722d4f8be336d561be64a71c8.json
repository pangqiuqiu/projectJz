{"ast":null,"code":"import wx from \"weixin-js-sdk\";\nexport function wexinPay(data, cb, errorCb) {\n  // 获取后台传入的数据\n  let appId = data.appId;\n  let timestamp = data.timeStamp;\n  let nonceStr = data.nonceStr; // let signature = data.signature\n\n  let packages = data.package;\n  let paySign = data.paySign;\n  let signType = data.signType; // console.log(\"发起微信支付\")\n  // 下面要发起微信支付了\n\n  wx.config({\n    debug: false,\n    // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n    appId: appId,\n    // 必填，公众号的唯一标识\n    timestamp: timestamp,\n    // 必填，生成签名的时间戳\n    nonceStr: nonceStr,\n    // 必填，生成签名的随机串\n    // signature: signature, // 必填，签名，见附录1\n    jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n\n  });\n  wx.ready(function () {\n    wx.chooseWXPay({\n      timestamp: timestamp,\n      // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符\n      nonceStr: nonceStr,\n      // 支付签名随机串，不长于 32 位\n      package: packages,\n      // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）\n      signType: signType,\n      // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'\n      paySign: paySign,\n      // 支付签名\n      success: function (res) {\n        // 支付成功后的回调函数\n        cb(res);\n      },\n      fail: function (res) {\n        // 失败回调函数\n        errorCb(res);\n      }\n    });\n  });\n  wx.error(function () {// config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。\n    // console.log(res)\n  });\n}","map":{"version":3,"sources":["H:/jz/前端/w/zhong/mobile/src/untils/wx.js"],"names":["wx","wexinPay","data","cb","errorCb","appId","timestamp","timeStamp","nonceStr","packages","package","paySign","signType","config","debug","jsApiList","ready","chooseWXPay","success","res","fail","error"],"mappings":"AAAA,OAAOA,EAAP,MAAe,eAAf;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAA4BC,OAA5B,EAAqC;AAC1C;AACA,MAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;AACA,MAAIC,SAAS,GAAGJ,IAAI,CAACK,SAArB;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACM,QAApB,CAJ0C,CAK1C;;AACA,MAAIC,QAAQ,GAAGP,IAAI,CAACQ,OAApB;AACA,MAAIC,OAAO,GAAGT,IAAI,CAACS,OAAnB;AACA,MAAIC,QAAQ,GAAGV,IAAI,CAACU,QAApB,CAR0C,CAS1C;AACA;;AACAZ,EAAAA,EAAE,CAACa,MAAH,CAAU;AACRC,IAAAA,KAAK,EAAE,KADC;AACM;AACdT,IAAAA,KAAK,EAAEA,KAFC;AAEM;AACdC,IAAAA,SAAS,EAAEA,SAHH;AAGc;AACtBE,IAAAA,QAAQ,EAAEA,QAJF;AAIY;AACpB;AACAO,IAAAA,SAAS,EAAE,CAAC,aAAD,CANH,CAMmB;;AANnB,GAAV;AAQAf,EAAAA,EAAE,CAACgB,KAAH,CAAS,YAAY;AACnBhB,IAAAA,EAAE,CAACiB,WAAH,CAAe;AACbX,MAAAA,SAAS,EAAEA,SADE;AACS;AACtBE,MAAAA,QAAQ,EAAEA,QAFG;AAEO;AACpBE,MAAAA,OAAO,EAAED,QAHI;AAGM;AACnBG,MAAAA,QAAQ,EAAEA,QAJG;AAIO;AACpBD,MAAAA,OAAO,EAAEA,OALI;AAKK;AAClBO,MAAAA,OAAO,EAAE,UAAUC,GAAV,EAAe;AACtB;AACAhB,QAAAA,EAAE,CAACgB,GAAD,CAAF;AACD,OATY;AAUbC,MAAAA,IAAI,EAAE,UAAUD,GAAV,EAAe;AACnB;AACAf,QAAAA,OAAO,CAACe,GAAD,CAAP;AACD;AAbY,KAAf;AAeD,GAhBD;AAiBAnB,EAAAA,EAAE,CAACqB,KAAH,CAAS,YAAY,CACnB;AACA;AACD,GAHD;AAID","sourcesContent":["import wx from \"weixin-js-sdk\"\r\n\r\nexport function wexinPay(data, cb, errorCb) {\r\n  // 获取后台传入的数据\r\n  let appId = data.appId\r\n  let timestamp = data.timeStamp\r\n  let nonceStr = data.nonceStr\r\n  // let signature = data.signature\r\n  let packages = data.package\r\n  let paySign = data.paySign\r\n  let signType = data.signType\r\n  // console.log(\"发起微信支付\")\r\n  // 下面要发起微信支付了\r\n  wx.config({\r\n    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\r\n    appId: appId, // 必填，公众号的唯一标识\r\n    timestamp: timestamp, // 必填，生成签名的时间戳\r\n    nonceStr: nonceStr, // 必填，生成签名的随机串\r\n    // signature: signature, // 必填，签名，见附录1\r\n    jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\r\n  })\r\n  wx.ready(function () {\r\n    wx.chooseWXPay({\r\n      timestamp: timestamp, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符\r\n      nonceStr: nonceStr, // 支付签名随机串，不长于 32 位\r\n      package: packages, // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）\r\n      signType: signType, // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'\r\n      paySign: paySign, // 支付签名\r\n      success: function (res) {\r\n        // 支付成功后的回调函数\r\n        cb(res)\r\n      },\r\n      fail: function (res) {\r\n        // 失败回调函数\r\n        errorCb(res)\r\n      }\r\n    })\r\n  })\r\n  wx.error(function () {\r\n    // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。\r\n    // console.log(res)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}